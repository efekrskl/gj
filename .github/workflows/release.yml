name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and release on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ''
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare zip
        shell: bash
        run: |
          mkdir release
          cp target/${{ matrix.target }}/release/gj${{ matrix.ext }} release/

      - name: Archive (zip)
        run: |
          if ($env:OS -eq "Windows_NT") {
            Compress-Archive -Path release\* -DestinationPath release\${{ matrix.target }}.zip
          } else {
            zip -j release/${{ matrix.target }}.zip release/*
          }
        shell: pwsh

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: release/${{ matrix.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
